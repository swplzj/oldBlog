<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | 李振杰]]></title>
  <link href="http://swplzj.github.io/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://swplzj.github.io/"/>
  <updated>2014-09-18T22:18:44+08:00</updated>
  <id>http://swplzj.github.io/</id>
  <author>
    <name><![CDATA[LeeZhenjie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Polang]]></title>
    <link href="http://swplzj.github.io/blog/2014/09/19/polang/"/>
    <updated>2014-09-19T00:44:17+08:00</updated>
    <id>http://swplzj.github.io/blog/2014/09/19/polang</id>
    <content type="html"><![CDATA[<p>定制Octopress
JUL 10TH, 2013 | COMMENTS
在 github pages 上搭建好 octopress 博客之后，博客的基本功能就能使用了。</p>

<p>如果想让自己的博客充满个性，还可以继续探索定制方法。这里对自己的定制过程做一些总结。</p>

<p>提前声明：</p>

<p>不会 Ruby 的童鞋特别注意：配置_ config.yml 的过程中特别注意，配置项『:』后要留空格，否则会报错。</p>

<p>由于初期修改时经验不足，这里的一些『土方法』可能并不利于程序的维护可扩展，有空再仔细研究，大家将就着用吧;).</p>

<p>0.安装第三方主题</p>

<p>我使用的第三方主题是『whitelake』。</p>

<p>安装过程很简单:</p>

<p>1
2
3
4
$ cd octopress
$ git clone <a href="https://github.com/gehaxelt/CSS-WhiteLake.git">https://github.com/gehaxelt/CSS-WhiteLake.git</a> .themes/whitelake
$ rake install[&lsquo;whitelake&rsquo;]
$ rake generate
注意，执行rake install[&lsquo;whitelake&rsquo;]之后，直接使用rake preview浏览网页会遇到很多瑕疵，rake generate之后再rake preview就没问题了。</p>

<p>更多第三方插件和主题资源，参见官方 repo 的 wiki.</p>

<p>1.装饰边栏</p>

<p>以增加豆瓣展示框为例。参加正反反长大哥的博客 How to Embed Douban-Show in Your Octopress Site</p>

<p>2.增加评论和分享功能</p>

<p>虽然 Octopress 内置的 Disqus 评论系统很不错，但在国内的使用并不普及。相比之下，友言、多说等第三方评论则更接地气，可以利用到微博、人人等 SNS 账号。使用哪个见仁见智，本博客就是从友言切换到 Disqus 上的。下面介绍下如何使用友言和加网的分享标记。</p>

<p>2.1 友言</p>

<p>首先注册友言的账号，如果不注册，虽然也能实现评论功能，但没有后台管理整个站点的评论会十分纠结。注册完成之后，选择获取代码，将这串代码贴入相应的位置，即可实现第三方评论。</p>

<p>在路径$OCTOPRESS/source/_includes/post/上创建文件youyanandjiathis.html，功能代码放入其中。</p>

<p>2.2 加网</p>

<p>分享方面，本博客使用了加网。注册后，在更多高级自定义功能中，可能自定义不同的分享按钮，生成代码后，也将生成的代码贴入$OCTOPRESS/source/_includes/post/youyanandjiathis.html中。</p>

<p>现在，youyanandjiathis.html 的样子如下(需要注意，自己使用时，uid 显然是不一样的啦)</p>

<p>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20</p>

<!-- JiaThis Button BEGIN -->


<div class="jiathis_style_32x32">
  <a class="jiathis_button_qzone"></a>
  <a class="jiathis_button_tsina"></a>
  <a class="jiathis_button_tqq"></a>
  <a class="jiathis_button_weixin"></a>
  <a class="jiathis_button_renren"></a>
  <a href="http://www.jiathis.com/share?uid=1814751" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"></a>
  <a class="jiathis_counter_style"></a>
</div>


<script type="text/javascript">
var jiathis_config = {data_track_clickback:'true'};
</script>


<script type="text/javascript" src="http://v3.jiathis.com/code/jia.js?uid=xxxxxx" charset="utf-8"></script>


<!-- JiaThis Button END -->




<!-- UY BEGIN -->


<div id="uyan_frame"></div>


<script type="text/javascript" src="http://v2.uyan.cc/code/uyan.js?uid=xxxxxxxx"></script>


<!-- UY END -->


<p>2.3 将功能增加到博客中</p>

<p>功能代码已经都在 youyanandjiathis.html 中了，接下来是让 blog 使用到这些功能代码。</p>

<p>首先在_ config.yml 中增加开关：</p>

<p>1
2</p>

<h1>comment and share</h1>

<p>comment_and_share: true
然后在$OCTOPRESS/source/_includes/post/sharing.html中的，根据开关comment_and_share 引入对应的功能代码post/youyanandjiathis.html，类比于默认实现中的<facebook_like>部分。代码如下（使用时，先去掉反斜杠）：</p>

<p>1
2
3
  {\% if site.comment_and_share \%}
      {\% include post/]youyanandjiathis.html \%}
  {\% endif \%}
2.4 友言验证</p>

<p>另如果需要在友言的后台处理评论，甚至做一些定制化处理，需要通过友言的验证。详情参见友言的管理员后台界面。大致过程是在自己的 master 分支的根目录下放置一个友言提供的验证文件，让友言网站来检测。</p>
]]></content>
  </entry>
  
</feed>
